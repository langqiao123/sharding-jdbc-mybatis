<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.langqiao.sharding.jdbc.mapper.TUserDoMapper">
  <resultMap id="BaseResultMap" type="com.langqiao.sharding.jdbc.entity.TUserDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="inserttime" jdbcType="TIMESTAMP" property="inserttime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="isactive" jdbcType="BIT" property="isactive" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, name, age, inserttime, updatetime, isactive
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.langqiao.sharding.jdbc.entity.TUserDo">
    insert into t_user ( user_id, name, 
      age, inserttime, updatetime, 
      isactive)
    values (#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{inserttime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{isactive,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.langqiao.sharding.jdbc.entity.TUserDo">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="inserttime != null">
        inserttime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="isactive != null">
        isactive,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null">
        #{isactive,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.langqiao.sharding.jdbc.entity.TUserDo">
    update t_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null">
        isactive = #{isactive,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.langqiao.sharding.jdbc.entity.TUserDo">
    update t_user
    set user_id = #{userId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      isactive = #{isactive,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCountSelective" resultType="java.lang.Long">
    select count(1) from t_user
    <where>
      <if test="record.userId != null">
         and user_id = #{record.userId,jdbcType=BIGINT}
      </if>
      <if test="record.name != null">
         and name = #{record.name,jdbcType=VARCHAR}
      </if>
      <if test="record.age != null">
         and age = #{record.age,jdbcType=INTEGER}
      </if>
      <if test="record.inserttime != null">
         and inserttime = #{record.inserttime,jdbcType=TIMESTAMP}
      </if>
      <if test="record.updatetime != null">
         and updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
      </if>
      <if test="record.isactive != null">
         and isactive = #{record.isactive,jdbcType=BIT}
      </if>
    </where>
  </select>
  <select id="selectPageSelective" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from t_user
    <where>
      <if test="record.userId != null">
         and user_id = #{record.userId,jdbcType=BIGINT}
      </if>
      <if test="record.name != null">
         and name = #{record.name,jdbcType=VARCHAR}
      </if>
      <if test="record.age != null">
         and age = #{record.age,jdbcType=INTEGER}
      </if>
      <if test="record.inserttime != null">
         and inserttime = #{record.inserttime,jdbcType=TIMESTAMP}
      </if>
      <if test="record.updatetime != null">
         and updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
      </if>
      <if test="record.isactive != null">
         and isactive = #{record.isactive,jdbcType=BIT}
      </if>
      <if test="pageable.sort != null">
         order by 
        <foreach collection="pageable.sort" item="order" separator=",">
          <if test="order.property == 'id' || order.property == 'user_id'  || order.property == 'name'  || order.property == 'age'  || order.property == 'inserttime'  || order.property == 'updatetime'  || order.property == 'isactive' ">
             ${order.property} ${order.direction} 
          </if>
        </foreach>
      </if>
      <if test="pageable.offset >= 0 and pageable.pageSize > 0">
        limit ${pageable.offset}, ${pageable.pageSize}
      </if>
    </where>
  </select>
  <update id="batchDeleteByPrimaryKey" parameterType="java.util.List">
    update t_user set isactive = 0 where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       ${item} 
    </foreach>
    and isactive = 1
  </update>
  <insert id="insertSelectiveReturnPrimaryKey" parameterType="com.langqiao.sharding.jdbc.entity.TUserDo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID() as id
    </selectKey>
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="inserttime != null">
        inserttime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="isactive != null">
        isactive,
      </if>
    </trim>
    <trim prefix=" values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="inserttime != null">
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isactive != null">
        #{isactive,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <insert id="batchInsert" parameterType="com.langqiao.sharding.jdbc.entity.TUserDo">
    insert into t_user (user_id,name,age,inserttime,updatetime,isactive ) values 
    <foreach collection="list" index="index" item="item" separator=",">
       (#{item.userId,jdbcType=BIGINT},#{item.name,jdbcType=VARCHAR},#{item.age,jdbcType=INTEGER},#{item.inserttime,jdbcType=TIMESTAMP},#{item.updatetime,jdbcType=TIMESTAMP},#{item.isactive,jdbcType=BIT} ) 
    </foreach>
  </insert>
  <select id="batchSelectByPrimaryKey" parameterType="java.util.List" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from t_user where id in
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       ${item} 
    </foreach>
  </select>
  
  <select id="findAll" resultMap="BaseResultMap">
   select <include refid="Base_Column_List"/> from t_user 
  </select>
  
  <select id="findByUserIds" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from t_user where user_id in (
     <foreach collection="list" item="item" separator=",">
        #{item}
     </foreach>
    )
    
  </select>
  
</mapper>